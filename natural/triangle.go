package natural

import "code.google.com/p/intmath/i64"

// Return the serie of triangle numbers, generated by adding the natural numbers
// So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
func Triangle(max int) chan int64 {

	ch := make(chan int64)
	go func() {
		defer close(ch)
		total := int64(0)
		for i := 1; i <= max; i++ {
			total += int64(i)
			ch <- total
		}
	}()
	return ch
}

func Pentagonal(max int64) chan int64 {
	ch := make(chan int64)
	go func() {
		defer close(ch)
		i := int64(1)
		for {
			p := i * (3*i - 1) / 2
			if p > max {
				return
			}
			ch <- p
			i += 1
		}
	}()
	return ch
}

func IsPentagonal(x int64) bool {
	// Solve x = n(3n-1)/2 for n
	// 3n^2 -n -2x = 0
	// Has integer roots only if sqrt(b^2-4ac) is integer,
	// so sqrt(1 + 24*x)
	sq := i64.Sqrt(24*x + 1)
	return sq*sq == 24*x+1 && (sq%6) == 5
}
